server:
  port: 8082

spring:
  application: 
    name: display
  mvc: 
    favicon: 
      enabled: false #favicon设置favicon设置
  datasource: 
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://118.25.7.241:3306/myblog?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: fanxiaoyi
    #Druid连接池的配置信息
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000 #配置获取连接等待超时的时间
      filters: stat,wall,log4j # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙     
      time-between-eviction-runs-millis: 60000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000 #配置一个连接在池中最小生存的时间，单位是毫秒
                   #检测连接是否有效的sql
      validation-query: SELECT 'x' 
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #PSCache Mysql下建议关闭
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: -1      
  thymeleaf: 
    cache: false
    mode: LEGACYHTML5
  redis: 
    host: 118.25.7.241
    password: fanxiaoyi
    timeout: 3000
    #database: 1
    port: 6379
    jedis:
      pool:
        max-idle: 8
        max-wait: -1
        min-idle: 0
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB

# 配置WallFilte
#spring: datasource: druid: filter: wall: enabled: true
#spring: datasource: druid: filter: wall: db-type: mysql
#spring: datasource: druid: filter: wall: config: delete-allow: false
#spring: datasource: druid: filter: wall: config: drop-table-allow: false
#spring: datasource: druid: filter: wall: config: create-table-allow: false
#spring: datasource: druid: filter: wall: config: alter-table-allow: false
#spring: datasource: druid: filter: wall: config: truncate-allow: false  

#pagehelper插件
pagehelper: 
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count

#打印sql语句
#logging: level: com: zhy: mapper: ArticleLikesMapper: debug
    
eureka: 
  client: 
    service-url: 
      defaultZone: http://eureka1:2001/eureka, http://eureka2:2002/eureka

feign: 
  hystrix: 
    enabled: true

management: 
  endpoints:
    web:
      exposure: 
        include: hystrix.stream, refresh
        
---       
spring:
  profiles: pro
  redis:
    host: 172.17.0.13
    password: fanxiaoyi
eureka:
  client:
    service-url:
      defaultZone: http://172.17.0.13:2001/eureka